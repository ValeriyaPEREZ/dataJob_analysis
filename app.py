import streamlit as st
import pandas as pd
import numpy as np

import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv("kaggle_survey_2020_responses.csv", low_memory=False)


# Titre principal
st.title("Projet DATA JOB")
st.sidebar.title("Sommaire")
pages=["Le Projet DataJob","Dataset","Nettoyage des donn√©es","Analyse exploratoire","Comp√©tences par poste","Conclusion"]
page=st.sidebar.radio("aller vers",pages)
if page == "Le Projet DataJob":

    

    with st.container():
        st.image("DataScientist.png", caption="Data Scientist")
        st.subheader("Projet r√©alis√© par Valeriya PEREZ the best")
    st.subheader(" Objectif")
    st.markdown("""**Comprendre les diff√©rents profils techniques dans l'industrie de la Data** √† partir du sondage Kaggle 2020.  
    Identifier les t√¢ches effectu√©es et les outils utilis√©s globalement, puis les analyser selon les **postes occup√©s**, afin de construire un syst√®me simple de recommandation de poste pour les apprenants.)""")

    st.markdown("""
    ### Approche & M√©thode : m√©thode cycle V
                

    - **Exploration** des donn√©es du sondage
    - **Analyse** des outils, comp√©tences et t√¢ches selon les postes
    - **Choix de recommandations** bas√©es sur les similarit√©s de comp√©tences""")

    st.image("kaggle.png", caption="Kaggle")
    

   

elif page == "Dataset":
    st.subheader("Aper√ßu des 15 premi√®res lignes")
    st.dataframe(df.head(15))

elif page == "Nettoyage des donn√©es":
    st.subheader("üßº Nettoyage des donn√©es")

    # 1. Trouver les doublons et les supprimer
    nb_doublons = df.duplicated().sum()
    st.markdown(f"**üîÅ Nombre de doublons trouv√©s :** {nb_doublons}")
    if nb_doublons > 0:
        st.write("Suppression des doublons...")
        df.drop_duplicates(inplace=True)
        st.markdown("Doublons supprim√©s ‚úÖ")
    else:
        st.info("Aucun doublon trouv√©.")

    # 2. Identifier les NaN
    st.markdown("Identifier les NaN")
    nan_percent = df.isnull().mean().sort_values(ascending=False) * 100
    nan_percent = nan_percent[nan_percent > 0]
    st.dataframe(nan_percent.head(3))  # affiche les 10 colonnes les plus vides

    # 3. Justifier la d√©cision de supprimer les colonnes ¬´ trop vides ¬ª
    st.markdown(f"üßπ Colonnes supprim√©es car >90% de NaN")
    st.markdown(f"Les autres NaN sont remplac√©s par O")

    # 4. Renommer les colonnes trop longues
    
    st.markdown("G√©rer les colonnes avec des noms longs (Excel, renommer, regrouper)")
    st.image("questionsExcel.png")


elif page == "Analyse exploratoire":
    st.subheader("Analyse exploratoire (EDA)")

    st.markdown("L‚Äôanalyse exploratoire a constitu√© le c≈ìur de notre d√©marche, car elle nous a permis de d√©gager les grandes tendances qui caract√©risent les professionnels de la data. " \
    "Cette √©tape a √©t√© conduite selon plusieurs axes, en partant " \
    "d‚Äôune vue globale des profils, " \
    "puis en s‚Äôint√©ressant plus pr√©cis√©ment aux outils, langages et plateformes les plus r√©pandus. " \
    "Et finalement, les comp√©tences par le poste de travail occup√©.")
    st.image("cycleV.png")

    st.markdown("### Pr√©sentation g√©n√©rale des profils de r√©pondants")

    st.markdown("Les hommes sont nettement plus nombreux dans le secteur." \
    "Pour les deux genres, les dipl√¥mes de niveau master et bachelor sont majoritaires." \
    " Master (√† 40%), Bachelor‚Äôs √† (35,6%) ou d‚Äôun doctorat niveau (11%) , ce qui t√©moigne de l‚Äôexigence de formation dans les m√©tiers de la data")
    st.image("genre_etudes.png")

    st.markdown("L‚Äôessentiel des r√©pondants a entre 1 et 5 ans d‚Äôexp√©rience, avec une d√©croissance marqu√©e pour les tranches sup√©rieures. " \
    "Plus de 3 000 personnes ont moins d‚Äô1 an d‚Äôexp√©rience, ce qui compr√©hensible car majoritairement Kaggle est utiliser pour apprendre et les ¬´¬†seniors¬†¬ª ne l‚Äôutilise pas")
    st.image("agerepondants.png")

    st.markdown("Les pays les plus repr√©sent√©s dans l‚Äô√©chantillon sont l‚ÄôInde(44,2%), les √âtats-Unis (16,93%), " \
    "le Br√©sil(5,25%), le Royaume-Uni et la Russie")
    st.image("pays.png")
    st.image("cartemonde.png")

    
    st.markdown("La r√©partition g√©ographique et la pr√©sence de plus de 44 % de r√©pondants venant d‚ÄôInde nous ont permis de comprendre les r√©sultats extr√™mement √©tranges au niveau salarial (¬´¬†Q24¬†¬ª)")
    st.image("salaires.png")

    st.markdown("Pour affiner l‚Äôanalyse nous avons essay√© pr√©senter la r√©partition du salaire dans le top 5 pays repr√©sent√©s dans le questionnaire ")
    st.image("salairesparpays.png")


    
    st.markdown("### Affichage outils / langages / IDEs / ML etc.")

    st.markdown("Nous avons explor√© les comp√©tences techniques en √©tudiant les r√©ponses aux questions sur les outils utilis√©s. " \
    "Concernant les langages de programmation (Q7), " \
    "Python arrive largement en t√™te et comme langages utilis√©, mais √©galement comme premier langage √† apprendre (√† plus de 83% r√©pondants le conseillent), suivi de R et SQL.  ")
    st.image("TopLangagesConseill√©s.png")
    st.image("TopLangagesutilis√©s.png")

    st.markdown("En ce qui concerne les environnements de d√©veloppement IDE (Q9):" \
    " Jupyter Notebook( √† 30%) et Visual Studio Code( √† 15.7%) sont les plus couramment cit√©s, suivis par PyCharm (13,3%), Rstudio represente 10,2%, Spyder (8,8%), Notepad++ (8,4%), Sublime Text (6,6%)")
    st.image("IDE.png")

    st.markdown("En mati√®re de visualisation de donn√©es √† travers la question Q14." \
    " Les biblioth√®ques Matplotlib et Seaborn dominent largement, suivies de pr√®s par Plotly. Cette hi√©rarchie confirme la place centrale de Python dans l‚Äô√©cosyst√®me de la data science, et notamment de ses biblioth√®ques de visualisation. ")
    st.image("visualisation.png")

    


elif page == "Comp√©tences par poste":
    st.subheader("Identification des ensembles de comp√©tences par poste")
    

    st.markdown("### Objectif : cr√©er un Profil Type pour chaque poste")
    st.markdown("Etablissons un profil type pour chaque poste, en nous basant sur les comp√©tences les plus fr√©quemment associ√©es √† ces r√¥les. " \
    "Variable Q5-DataJob nous a permis d‚Äôidentifier les r√¥les les plus fr√©quents dans le sondage¬†: Student, Data Scientist, Data Analyst, Software Engineer, Machine Learning Engineer et Research Scientist")
    st.image("NombreRepondants.png")

    st.markdown("### Analyser par langages et IDE utilis√©s")


    st.markdown("Nous avons commenc√© par croiser les r√©ponses aux questions techniques (langages, IDEs, plateformes, t√¢ches ML) " \
    "avec le poste d√©clar√©, en choisissant les 4 profils types suivants : Data Analyst, Data Scientist, Data Engineer, Statisticien")
    st.image("LangagesparJob.png")


    st.markdown("Du c√¥t√© des environnements de d√©veloppement (Q9) pour ces 4 profils types suivants : Data Analyst, Data Scientist, Data Engineer, Statisticien")
    st.image("IDEparJob.png")

    st.markdown("L‚Äôanalyse des outils de visualisation (Q14) gr√¢ce √† ce diagramme en barres empil√©e a permis de confirmer ces tendances¬†: " \
    "les Data Scientists et Data Analysts privil√©gient Matplotlib, Seaborn et Plotly. Et ils effectuent beaucoup plus de visuels alors que les Statisticiens n‚Äôutilise quasiment pas les rendus visuels.")
    st.image("visualisationparJob.png")


    
    st.markdown("### Decliner selon le type de taches au quotidien")
    st.markdown("Le barplot horizontal empil√© ci-dessous pr√©sente les 5 principales activit√©s professionnelles par profil m√©tier")
    st.image("ActivitesparJob.png")


elif page == "Conclusion":
    st.subheader("Conclusion : vers un Syst√®me de Recommandation par Comp√©tences")

    st.markdown("### Data Analyst¬†")
    st.markdown("La bulle la plus grande : c‚Äôest le trio central pour les Data Analysts¬†: Python + Jupyter + Matplotlib cela pr√©sente la simplicit√©, l‚Äôaccessibilit√©, et la force de Python pour la visualisation")
    st.image("DataAnalyst.png")

    st.markdown("### Data Scientist¬†")
    st.markdown("La grosse bulle Python + Jupyter + Matplotlib est sans surprise la signature du Data Scientist classique. " \
    "La richesse des outils montre la polyvalence de ces professionnels: usage de Python avec plusieurs IDE et biblioth√®ques")
    st.image("ProfilDataScientist.png")


    st.markdown("### Data Engineer¬†")
    st.markdown("Les Data Engineers ne sont pas les plus visuels, mais ils utilisent une vari√©t√© d‚Äôoutils selon leurs missions (dashboards, monitoring, EDA‚Ä¶). " \
    "Les bulles se concentrent autour de 3 langages : Python est ultra-dominant. C‚Äôest la base de travail des Data Engineers. SQL est tr√®s pr√©sent , √©galement, ce qu‚Äôest coh√©rent avec leur r√¥le orient√© bases de donn√©es. " \
    "R est pr√©sent mais secondaire,probablement, quelques profils hybrides ou analystes reconvertis. " \
    "IDEs les plus utilis√©s Jupyter (JupyterLab, Notebooks...) - Coupl√© √† Python + Matplotlib repr√©sente la plus grosse bulle ce que montre une adoption forte des notebooks pour : l‚Äôexploration rapide, le prototypage, la documentation du code.")
    st.image("ProfilDataEngineer.png")

    st.markdown("### Statisticien¬†")
    st.markdown("Les statisticiens restent fortement ancr√©s dans R, ce qui est coh√©rent avec la tradition acad√©mique/statistique. " \
    "La bulle dominante R + RStudio + ggplot2. Pour les statisticiens modernis√©s vers la data science = Python + Jupyter + Matplotlib. Bulle R + VSCode + ggplot2 peut signaler une adoption progressive d'IDE plus g√©n√©ralistes ")
    st.image("ProfilStatisticien.png")


    st.markdown("### Proposition pour les 4 profils cl√©s : Data Analyst, Data Scientist,Data Engineer et Statisticien ")
    st.markdown("### Les parcours recommand√©s pour les √©tudiants ")
 
    data = {
    "Profil": ["Data Analyst", "Data Scientist", "Data Engineer", "Statisticien"],
    "Bulle principale": [
        "Python + Jupyter + Matplotlib",
        "Python + Jupyter + Matplotlib",
        "Python + Jupyter + Matplotlib",
        "R + RStudio + ggplot2"
    ],
    "Autres combinaisons notables": [
        "R + RStudio + Seaborn\nSQL + VSCode + Plotly",
        "Python + PyCharm + Plotly\nR + RStudio + ggplot2",
        "SQL + VSCode + Plotly/Seaborn\nSQL + PyCharm + ggplot2",
        "Python + Jupyter + Matplotlib\nR + RStudio + Plotly"
    ],
    "Langages cl√©s": [
        "Python, R, SQL",
        "Python, R",
        "Python, SQL, R",
        "R, Python, SQL"
    ],
    "IDEs utilis√©s": [
        "Jupyter, RStudio, VSCode, Visual Studio",
        "Jupyter, VSCode, PyCharm, RStudio",
        "Jupyter, VSCode, PyCharm, RStudio",
        "RStudio, Jupyter, VSCode"
    ],
    "Outils de visualisation": [
        "Matplotlib, Seaborn, Plotly, ggplot2",
        "Matplotlib, Seaborn, Plotly, ggplot2",
        "Matplotlib, Seaborn, Plotly, ggplot2",
        "ggplot2, Matplotlib, Plotly, Seaborn"
    ],
    "Profil m√©tier / comportement": [
        "Hybride : business, stats, visualisation",
        "Tr√®s polyvalent, technique et exploratoire",
        "Moins visuel, usage pro et scripting",
        "Statistique classique, rigueur, modernisation"
    ]
}

# Conversion en DataFrame
    df_profil = pd.DataFrame(data)

# Affichage dans Streamlit
    st.subheader("Tableau r√©capitulatif des 4 profils Data")
    st.table(df_profil)
    

   
   
